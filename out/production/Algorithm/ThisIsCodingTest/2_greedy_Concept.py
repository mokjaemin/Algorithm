
# 2. 그리디(Greedy)
# 현재 상황에서 지금 당장 좋은 것만을 고르는 방법
# 창의력을 요하는 경향이 많음
# 보통 정렬 알고리즘과 짝을 이뤄 출제


# 예제 1 - 거스름돈
# 설명 : 무한히 500, 100, 50, 10월 동전이 있다, 손님에게 거슬러줘야 할 돈은 N원일 때, 
#       거슬러 줘야할 동전의 최소 개수를 구하라. 단, 거슬러 줘야할 돈 N은 항상 10의 배수이다.

# 내가 작성
# spare = 1260
# coins = [500, 100, 50, 10]
# summary = 0
# for i in range(0, 4):
#     summary += spare//coins[i]
#     spare = spare%coins[i]
# print(summary)

# 답안
# for coin in coins:
#     summary += spare//coin
#     spare = spare%coin
# print(summary)


# 정리
# 아이디어 : 가장 큰 화폐부터 거슬러 주자
# 시간 복잡도 : O(K), K는 화폐의 종류
# 이 알고리즘은 시간 복잡도는 동전의 총 종류에만 영향을 받고, 거슬러 줘야하는 금액의 크기와는 무관
# 정단성 고려 : 가지고 잇는 동전 중에서 큰 단위가 항상 작은 단위의 배수이므로 작은 단위의
#            동전들을 종합해 다른 해가 나올 수 없기 때문에 위의 전제가 참.



